syntax = "proto3";

package api.console.passport;

option go_package = "github.com/omalloc/kratos-admin/api/console/passport;passport";
option java_multiple_files = true;
option java_package = "api.console.passport";

import "errors/errors.proto";
import "google/api/annotations.proto";
import "console/administration/user.proto";
import "console/administration/role.proto";
import "console/administration/menu.proto";

enum ErrorReason {
  // Set default error code.
  option (errors.default_code) = 500;

  // Set the error code separately for an enumeration.
  USER_NOT_FOUND = 0 [(errors.code) = 404];

	USER_OR_PASSWORD_ERROR = 1 [(errors.code) = 400];
}

enum CaptchaType {
	CAPTCHA_TYPE_UNSPECIFIED = 0;
	CAPTCHA_TYPE_EMAIL = 1;
	CAPTCHA_TYPE_SMS = 2;
}

service Passport {
	// 登录
	rpc Login (LoginRequest) returns (LoginReply){
		option (google.api.http) = {
			post: "/api/console/passport/login"
			body: "*"
		};
	}

	// 登出
	rpc Logout (LogoutRequest) returns (LogoutReply){
		option (google.api.http) = {
			post: "/api/console/passport/logout",
			body: "*"
		};
	}

	// 注册
	rpc Register (RegisterRequest) returns (RegisterReply){
		option (google.api.http) = {
			post: "/api/console/passport/register"
			body: "*"
		};
	}

	// 刷新令牌 deprecated
	// 废弃原因： 令牌刷新功能直接实现到 jwt middleware 中
	// rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenReply){
	// 	option (google.api.http) = {
	// 		post: "/api/console/passport/refresh_token"
	// 		body: "*"
	// 	};
	// }

	// 发送验证码
	rpc SendCaptcha (SendCaptchaRequest) returns (SendCaptchaReply){
		option (google.api.http) = {
			post: "/api/console/passport/send_captcha"
			body: "*"
		};
	}

	// 发送重置密码验证码
	rpc SendResetPassword (SendResetPasswordCaptchaRequest) returns (SendResetPasswordCaptchaReply){
		option (google.api.http) = {
			post: "/api/console/passport/send_reset_password"
			body: "*"
		};
	}

	// 重置密码
	rpc ResetPassword (ResetPasswordRequest) returns (ResetPasswordReply){
		option (google.api.http) = {
			post: "/api/console/passport/reset_password"
			body: "*"
		};
	}

	// 更新用户名
	rpc UpdateUsername (UpdateUsernameRequest) returns (UpdateUsernameReply){
		option (google.api.http) = {
			post: "/api/console/passport/{id}/username"
			body: "*"
		};
	}

	// 更新用户信息
	rpc UpdateProfile (UpdateProfileRequest) returns (UpdateProfileReply){
		option (google.api.http) = {
			post: "/api/console/passport/profile"
			body: "*"
		};
	}

	// 获取当前用户信息
	rpc CurrentUser (CurrentUserRequest) returns (CurrentUserReply){
		option (google.api.http) = {
			get: "/api/console/passport/current",
		};
	}

	// 获取授权的菜单
	rpc AuthorizeMenu (AuthorizeMenuRequest) returns (AuthorizeMenuReply){
		option (google.api.http) = {
			get: "/api/console/passport/authorize_menu"
		};
	}
	
}	

message LoginRequest {
	// 用户名
	string username = 1;
	// 密码
	string password = 2;
	// 自动登录
	bool auto_login = 3;
}

message LoginReply {}

message LogoutRequest {}
message LogoutReply {}

message RegisterRequest {
	// 用户名
	string username = 1;
	// 昵称
	string nickname = 2;
	// 密码
	string password = 3;
	// 邮箱
	string email = 4;
	// 验证码
	string captcha = 5;
}

message RegisterReply {}

message SendCaptchaRequest {
	CaptchaType type = 1;
	string from = 2;
}
message SendCaptchaReply {
}

message SendResetPasswordCaptchaRequest {
	string email = 1;
}
message SendResetPasswordCaptchaReply {
}

message ResetPasswordRequest {
	// 重置密码令牌
	string token = 1;
	// 邮箱
	string email = 2;
	// 密码
	string password = 3;
}

message ResetPasswordReply {}

message UpdateUsernameRequest {
	int64 id = 1;
	string username = 2;
}
message UpdateUsernameReply {}

message UpdateProfileRequest {
	string nickname = 1;
	string bio = 2;
	string avatar = 3;
}
message UpdateProfileReply {}

message CurrentUserRequest {}
message CurrentUserReply {
	administration.UserInfo user = 1;
	repeated administration.RoleInfo roles = 2;
}

message AuthorizeMenuRequest {
	int64 user_id = 1;
}
message AuthorizeMenuReply {
	repeated administration.MenuInfo data = 1;
}
